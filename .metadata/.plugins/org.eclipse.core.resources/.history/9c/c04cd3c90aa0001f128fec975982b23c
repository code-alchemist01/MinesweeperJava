import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.*;

public class Minesweeper {
	private class MineTile extends JButton {
		int r;
		int c;

		public MineTile(int r, int c) {
			this.r = r;
			this.c = c;
		}
	}

	int tileSize = 70;
	int numRows = 8;
	int numCols = numRows;
	int boardWidth = numCols * tileSize;
	int boardHeight = numRows * tileSize;

	JFrame frame = new JFrame("Minesweeper");
	JLabel textLabel = new JLabel();
	JPanel textPanel = new JPanel();
	JPanel boardPanel = new JPanel();

	int mineCount = 10;
	MineTile[][] board = new MineTile[numRows][numCols];
	ArrayList<MineTile> mineList;

	Minesweeper() {
		frame.setSize(boardWidth, boardHeight);
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLayout(new BorderLayout());

		textLabel.setFont(new Font("Arial", Font.BOLD, 25));
		textLabel.setHorizontalAlignment(JLabel.CENTER);
		textLabel.setText("Minesweeper: " + Integer.toString(mineCount));
		textLabel.setOpaque(true);

		textPanel.setLayout(new BorderLayout());
		textPanel.add(textLabel);
		frame.add(textPanel, BorderLayout.NORTH);

		boardPanel.setLayout(new GridLayout(numRows, numCols));
		frame.add(boardPanel);

		for (int r = 0; r < numRows; r++) {
			for (int c = 0; c < numCols; c++) {
				MineTile tile = new MineTile(r, c);
				board[r][c] = tile;

				tile.setFocusable(false);
				tile.setMargin(new Insets(0, 0, 0, 0));
				tile.setFont(new Font("Arial", Font.BOLD, 40));

				tile.addMouseListener(new MouseAdapter() {
					@Override
					public void mousePressed(MouseEvent e) {
						MineTile tile = (MineTile) e.getSource();

						// sol tÄ±k

						if (e.getButton() == MouseEvent.BUTTON1) {
							if (tile.getText() == "") {
								if (mineList.contains(tile)) {
									revealMines();
								}
								else {
									checkMine(tile.r,tile.c);
								}
							}
						}
					}

				});

				boardPanel.add(tile);
			}
		}
		frame.setVisible(true);

		setMines();
	}

	void setMines() {
		mineList = new ArrayList<MineTile>();
		
		

	}

	void revealMines() {
		for(int i = 0; i < mineList.size(); i++) {
			MineTile tile = mineList.get(i);
			tile.setText("ðŸ’£");
		}
	}
	void checkMine(int r,int c) {
		MineTile tile = board[r][c];
		tile.setEnabled(false);
		int bulunanMayin = 0;
		
		bulunanMayin += countMine();
	}

	 int countMine() {
		if(r < 0 || r >= numRows || c < 0 || c >= numCols) {
			return 0;
		}
	}
}



